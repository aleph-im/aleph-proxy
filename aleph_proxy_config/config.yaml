http:
  routers:

    to-homepage:
      rule: "Path(`/`)"
      service: aleph-proxy-homepage
      middlewares:
        - do-not-add-headers
      tls:
        certResolver: letsencrypt
        domains:
          - main: "aleph.cloud"  # Change to the domain you are using

    to-homepage-official:
      rule: "Path(`/`)"
      service: aleph-proxy-homepage
      middlewares:
        - do-not-add-headers
      tls:
        certResolver: letsencrypt
        domains:
          - main: "official.aleph.cloud"  # Change to the domain you are using

    to-aleph-api:
      # Forward API calls to all available Core Channel Nodes in the network
      rule: "PathPrefix(`/api/`)"
      service: aleph-api
      middlewares:
        - retry-if-no-reply
      tls:
        certResolver: letsencrypt
        domains:
          - main: "aleph.cloud"  # Change to the domain you are using

    to-aleph-official-api:
      #Forward API calls only to official Aleph.im API nodes
      rule: "PathPrefix(`/api/`)"
      service: aleph-official-api
      middlewares:
        - retry-if-no-reply
      tls:
        certResolver: letsencrypt
        domains:
          - main: "official.aleph.cloud"  # Change to the subdomain you are using

    to-aleph-vm:  # Forward VM calls to all available Compute Resource Nodes in the network
      rule: "PathPrefix(`/vm/`)"
      service: aleph-vm
      middlewares:
        - retry-if-no-reply
      tls:
        certResolver: letsencrypt
        domains:
          - main: "aleph.cloud"  # Change to the domain you are using

  middlewares:
    retry-if-no-reply:
      retry:
        attempts: 4
        initialInterval: 5ms

    do-not-add-headers:
      headers:
        customRequestHeaders:
          X-Forwarded-Host: "aleph-proxy-homepage.aleph.cloud"
          X-Forwarded-Port: ""
          X-Forwarded-Proto: ""
          X-Forwarded-Server: ""
          X-Real-Ip: ""

  services:

    aleph-proxy-homepage:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: http://aleph-proxy-homepage.aleph.cloud/  # Static page on IPFS, via Cloudflare

    aleph-api:
      loadBalancer:
        healthcheck:
          path: /
          interval: 60s
          timeout: 2s
        passHostHeader: false
        servers:  # These are the initial values, they will be updated from the list of nodes
        - url: https://api1.aleph.im/api/
        - url: https://api2.aleph.im/api/

    aleph-official-api:
      loadBalancer:
        healthcheck:
          path: /
          interval: 60s
          timeout: 2s
        passHostHeader: false
        servers: # These are the final values, they are not updated
          - url: https://api1.aleph.im/api/
          - url: https://api2.aleph.im/api/

    aleph-vm:
      loadBalancer:
        healthcheck:
          # Check the health of Compute Resource Nodes by calling the
          # fastapi demo path
          path: /vm/67705389842a0a1b95eaa408b009741027964edc805997475e95c505d642edd8
          interval: 60s
          timeout: 10s
        passHostHeader: false
        servers:  # These are the initial values, they will be updated from the list of nodes
        - url: https://aleph.sh/vm/
        - url: https://vm.demo.okeso.fr/vm/
        sticky:
          # Clients receive a session cookie that allows them to call the same Compute Resource Node for
          # all calls.
          cookie:
            name: aleph-proxy-sticky-session
